(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{406:function(t,e,a){"use strict";a.r(e);var s=a(28),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"upgrading-from-tsoa-2-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrading-from-tsoa-2-5"}},[t._v("#")]),t._v(" Upgrading from tsoa 2.5")]),t._v(" "),a("p",[a("a",{attrs:{href:"#breaking-changes"}},[t._v("Jump to the breaking changes")])]),t._v(" "),a("h2",{attrs:{id:"new-features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-features"}},[t._v("#")]),t._v(" New Features")]),t._v(" "),a("h3",{attrs:{id:"support-for-type-aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#support-for-type-aliases"}},[t._v("#")]),t._v(" Support for type aliases")]),t._v(" "),a("p",[t._v("This release comes with proper support for type alias definitions.")]),t._v(" "),a("p",[t._v("They can range from simple scenarios")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * A Word shall be a non-empty sting\n * @minLength 1\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Word")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("to more complex scenarios like unions and intersections of aliases")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionAlias")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" value2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" TypeAliasModel1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OneOrTwo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TypeAliasModel1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeAliasModel2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("or even generic type aliases:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericAlias"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ForwardGenericAlias"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GenericAlias"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Please note that this means that tsoa does not only generate the specification (OpenAPI v3 and Swagger2*), but will also validate the input against the types including the jsDoc annotations.")]),t._v(" "),a("p",[t._v("* There may be certain scenarios where we may not be able to generate Swagger 2 from your TypeScript, tsoa will log warnings to infor you about any issues we are aware of.")]),t._v(" "),a("h3",{attrs:{id:"support-for-mapped-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#support-for-mapped-types"}},[t._v("#")]),t._v(" Support for mapped types")]),t._v(" "),a("blockquote",[a("p",[t._v("TypeScript 2.1 introduced mapped types, a powerful addition to the type system. In essence, mapped types allow you to create new types from existing ones by mapping over property types. Each property of the existing type is transformed according to a rule that you specify. The transformed properties then make up the new type.\n- Marius Schulz, https://mariusschulz.com/blog/mapped-types-in-typescript")])]),t._v(" "),a("p",[t._v("tsoa now works with the ts type checker to resolve mapped types. We will actively try to support all cases, however the test suite for now only covers the utility mapped types typescript ships with, like:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Make all properties in T optional\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Partial"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Make all properties in T required\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Required"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Make all properties in T readonly\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readonly"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * From T, pick a set of properties whose keys are in the union K\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("P")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"support-for-conditional-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#support-for-conditional-types"}},[t._v("#")]),t._v(" Support for conditional types")]),t._v(" "),a("p",[t._v("As of version 2.8, TypeScript supports conditional types. The syntax is very close to the ternary operator and enables expression of 2 (or more) different types based on a condition. Please refer to the "),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/advanced-types.html#conditional-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript Handbook"),a("OutboundLink")],1),t._v(" for details.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Diff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remove types from T that are assignable to U")]),t._v("\n")])])]),a("p",[t._v("tsoa now works with the ts type checker to resolve conditional types. We will actively try to support most cases, however the test suite for now only covers the utility types typescript ships with, like:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Exclude from T those types that are assignable to U\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exclude"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Extract from T those types that are assignable to U\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Extract"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("U")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Exclude null and undefined from T\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NonNullable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("never")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"support-for-combinations-and-utility-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#support-for-combinations-and-utility-types"}},[t._v("#")]),t._v(" Support for combinations and utility types")]),t._v(" "),a("p",[t._v("The combination of mapped and conditional types allow for powerful utility types like the "),a("code",[t._v("Omit")]),t._v(" type.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/**\n * Construct a type with the properties of T except for those in type K.\n */\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\n")])])]),a("h3",{attrs:{id:"support-for-record-662-eywek"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#support-for-record-662-eywek"}},[t._v("#")]),t._v(" Support for "),a("code",[t._v("Record<>")]),t._v(" "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/662",target:"_blank",rel:"noopener noreferrer"}},[t._v("#662"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/Eywek",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eywek"),a("OutboundLink")],1),t._v(")`")]),t._v(" "),a("h3",{attrs:{id:"enums-see-594-for-the-spec-and-599-and-593"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enums-see-594-for-the-spec-and-599-and-593"}},[t._v("#")]),t._v(" Enums: See "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/594",target:"_blank",rel:"noopener noreferrer"}},[t._v("#594"),a("OutboundLink")],1),t._v(" for the Spec and "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/599",target:"_blank",rel:"noopener noreferrer"}},[t._v("#599"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/593",target:"_blank",rel:"noopener noreferrer"}},[t._v("#593"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"null-keyword-see-601"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-keyword-see-601"}},[t._v("#")]),t._v(" Null Keyword: See "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/601",target:"_blank",rel:"noopener noreferrer"}},[t._v("#601"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"ability-to-use-a-colon-delimiter-instead-of-bracelets-in-path-602-itamarco"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ability-to-use-a-colon-delimiter-instead-of-bracelets-in-path-602-itamarco"}},[t._v("#")]),t._v(" Ability to use a colon delimiter instead of bracelets in path "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/602",target:"_blank",rel:"noopener noreferrer"}},[t._v("#602"),a("OutboundLink")],1),t._v("("),a("a",{attrs:{href:"https://github.com/itamarco",target:"_blank",rel:"noopener noreferrer"}},[t._v("itamarco"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"added-example-support-for-parameters-properties-616-jfrconley"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#added-example-support-for-parameters-properties-616-jfrconley"}},[t._v("#")]),t._v(" added @example support for parameters / properties "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/616",target:"_blank",rel:"noopener noreferrer"}},[t._v("#616"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/jfrconley",target:"_blank",rel:"noopener noreferrer"}},[t._v("jfrconley"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"feat-ignore-class-methods-643-eywek"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feat-ignore-class-methods-643-eywek"}},[t._v("#")]),t._v(" feat: ignore class methods "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/643",target:"_blank",rel:"noopener noreferrer"}},[t._v("#643"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/Eywek",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eywek"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"feat-handle-enum-members-656-eywek"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feat-handle-enum-members-656-eywek"}},[t._v("#")]),t._v(" feat: handle enum members "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/656",target:"_blank",rel:"noopener noreferrer"}},[t._v("#656"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/Eywek",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eywek"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"handle-indexed-types-636-eywek"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handle-indexed-types-636-eywek"}},[t._v("#")]),t._v(" Handle indexed types "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/636",target:"_blank",rel:"noopener noreferrer"}},[t._v("#636"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/Eywek",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eywek"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"handle-typeof-635-eywek"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handle-typeof-635-eywek"}},[t._v("#")]),t._v(" handle "),a("code",[t._v("typeof")]),t._v(" "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/635",target:"_blank",rel:"noopener noreferrer"}},[t._v("#635"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/Eywek",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eywek"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"format-support-for-type-aliases-620-jfrconley"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#format-support-for-type-aliases-620-jfrconley"}},[t._v("#")]),t._v(" "),a("code",[t._v("@format")]),t._v(" support for type aliases "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/620",target:"_blank",rel:"noopener noreferrer"}},[t._v("#620"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/jfrconley",target:"_blank",rel:"noopener noreferrer"}},[t._v("jfrconley"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h2",{attrs:{id:"bug-fixes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes"}},[t._v("#")]),t._v(" Bug Fixes")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("correctly propagate field name in validateModel "),a("a",{attrs:{href:"https://github.com/fantapop",target:"_blank",rel:"noopener noreferrer"}},[t._v("@fantapop"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("Aliased void Api Response types document 200 response instead of 204 "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/629",target:"_blank",rel:"noopener noreferrer"}},[t._v("#629"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/WoH",target:"_blank",rel:"noopener noreferrer"}},[t._v("WoH"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("ValidateError should extend Error "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/661",target:"_blank",rel:"noopener noreferrer"}},[t._v("#661"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/aldenquimby",target:"_blank",rel:"noopener noreferrer"}},[t._v("aldenquimby"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("Upgrade koa-router to @koa/router, fix type errors "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/646",target:"_blank",rel:"noopener noreferrer"}},[t._v("#646"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/michaelbeaumont",target:"_blank",rel:"noopener noreferrer"}},[t._v("michaelbeaumont"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("Remove object type "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/642",target:"_blank",rel:"noopener noreferrer"}},[t._v("#642"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/dimitor115",target:"_blank",rel:"noopener noreferrer"}},[t._v("dimitor115"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("Fix adding static properties to model definition "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/639",target:"_blank",rel:"noopener noreferrer"}},[t._v("#639"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/dimitor115",target:"_blank",rel:"noopener noreferrer"}},[t._v("dimitor115"),a("OutboundLink")],1),t._v(")")])])]),t._v(" "),a("h2",{attrs:{id:"breaking-changes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes"}},[t._v("#")]),t._v(" Breaking changes")]),t._v(" "),a("h3",{attrs:{id:"null-vs-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-vs-undefined"}},[t._v("#")]),t._v(" Null vs. undefined")]),t._v(" "),a("p",[t._v("Unless you declare a type to accept "),a("code",[t._v("null")]),t._v(", we will no longer mark your optional properties as "),a("code",[t._v("nullable: true")]),t._v(" or "),a("code",[t._v("x-nullable: true")]),t._v(".\nThis applies to validation aswell, so while sending "),a("code",[t._v("null")]),t._v(" instead of sending "),a("code",[t._v("undefined")]),t._v(" / no properties on an object was fine, now it's not any more.\nSending "),a("code",[t._v("undefined")]),t._v(" instead of, i.e. "),a("code",[t._v("string | null")]),t._v(" is also rejected by the validation.")]),t._v(" "),a("h3",{attrs:{id:"naming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#naming"}},[t._v("#")]),t._v(" Naming")]),t._v(" "),a("p",[t._v("In order to support type aliases and avoid name clashes, the names for the generated component schemas / definitions may have changed (generic interfaces are affected mostly).\nIf you rely on the component names generated from tsoa, this is a breaking change.")]),t._v(" "),a("p",[t._v("Because tsoa supported some type aliases in the past and now generated definitions differently, this may break your code.\nIf you relied on tsoa not supporting type aliases properly to avoid issues, this may break your code.\nProceed with caution and report issues.")]),t._v(" "),a("h3",{attrs:{id:"improve-nested-object-validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#improve-nested-object-validation"}},[t._v("#")]),t._v(" Improve nested object validation")]),t._v(" "),a("p",[t._v("See "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/574",target:"_blank",rel:"noopener noreferrer"}},[t._v("#574"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/575",target:"_blank",rel:"noopener noreferrer"}},[t._v("#575"),a("OutboundLink")],1),t._v(".\nThese SHOULD not be breaking changes, but since it affects validation, better safe than sorry.")]),t._v(" "),a("h3",{attrs:{id:"change-default-behavior-when-no-host-is-defined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-default-behavior-when-no-host-is-defined"}},[t._v("#")]),t._v(" Change default behavior when no host is defined:")]),t._v(" "),a("p",[t._v("Explicitly set your host in case you want to have absolute urls. This is a breaking change for those who were using OpenAPI 3, but it actually brings tsoa into parity with how we were handling the "),a("code",[t._v("host")]),t._v(" property in Swagger 2. Previously OpenAPI 3 users had to result to passing "),a("code",[t._v("null")]),t._v(" which we all felt was strange. Now omitting "),a("code",[t._v("host")]),t._v(" will cause tsoa to assume the url should be relative.")]),t._v(" "),a("h3",{attrs:{id:"remove-in-fielderrors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove-in-fielderrors"}},[t._v("#")]),t._v(" Remove .. in fieldErrors")]),t._v(" "),a("p",[t._v("When detecting illegal additional properties (if you are using tsoa setting "),a("code",[t._v("additionalProperties: 'throw-on-extras'")]),t._v("), the key on the error would contain an additional dot.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n  "TestModel'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("additionalProp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This is now fixed and the key is "),a("code",[t._v("TestModel.additionalProp")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"use-spec-instead-of-swagger-tsoa-swagger-is-still-available-for-now-but-will-be-removed-eventually-664-woh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-spec-instead-of-swagger-tsoa-swagger-is-still-available-for-now-but-will-be-removed-eventually-664-woh"}},[t._v("#")]),t._v(" Use Spec instead of Swagger ("),a("code",[t._v("tsoa swagger")]),t._v(" is still available for now, but will be removed eventually) "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/664",target:"_blank",rel:"noopener noreferrer"}},[t._v("#664"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/WoH",target:"_blank",rel:"noopener noreferrer"}},[t._v("WoH"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("div",{staticClass:"language-diff extra-class"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[t._v("Calling the tsoa command\n"),a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[a("span",{pre:!0,attrs:{class:"token prefix deleted"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(" tsoa swagger\n")])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(" tsoa spec\n")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[a("span",{pre:!0,attrs:{class:"token prefix deleted"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(" tsoa swagger-and-routes\n")])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(" tsoa spec-and-routes\n")])]),t._v("\nManually calling spec generation\n"),a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[a("span",{pre:!0,attrs:{class:"token prefix deleted"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(" await generateSwaggerSpec(swaggerConfig, routesConfig, compilerOptions, config.ignore);\n")])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(" await generateSpec(openapiConfig, compilerOptions, config.ignore);\n")])])])])]),a("p",[t._v("tsoa.json:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"swagger"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("becomes")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Move shared config to top level "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/pull/628",target:"_blank",rel:"noopener noreferrer"}},[t._v("#628"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://github.com/WoH",target:"_blank",rel:"noopener noreferrer"}},[t._v("WoH"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("p",[t._v("Instead of duplicating config and handling a lot of edge cases, the new config is a lot simpler.\nConfig settings, that impact both routes and spec are now located at the top level of the config object.")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entryFile"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tests/fixtures/express/server.ts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"noImplicitAdditionalProperties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"silently-remove-extras"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"routes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This means if your settings are different (for example the entry file), you'll have to call the "),a("code",[t._v("generateRoutes()")]),t._v(" and "),a("code",[t._v("generateSpec()")]),t._v(" yourself.\nNote that these methods now have a simpler config aswell:")]),t._v(" "),a("div",{staticClass:"language-diff extra-class"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[a("span",{pre:!0,attrs:{class:"token prefix deleted"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v("    await generateSwaggerSpec(swaggerConfig, routesConfig, compilerOptions, config.ignore);\n")])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v("    await generateSpec(openapiConfig, compilerOptions, config.ignore);\n")])])])])]),a("div",{staticClass:"language-diff extra-class"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[a("span",{pre:!0,attrs:{class:"token prefix deleted"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v("    await generateRoutes(routesConfig, swaggerConfig, compilerOptions, config.ignore);\n")])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v("    await generateRoutes(routesConfig, compilerOptions, config.ignore);\n")])])])])]),a("p",[t._v("EntryFile and noImplicitAdditionalProperties can now be set on the swagger/routesConfig.")]),t._v(" "),a("p",[t._v("Also, boolean settings for noImplicitAdditionalProperties have been removed: #503\nValid settings are now: "),a("code",[t._v("'throw-on-extras' | 'silently-remove-extras' | 'ignore'")]),t._v(", everything else falls back to "),a("code",[t._v("'ignore'")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("For reference, see the TS interface of the entire config "),a("a",{attrs:{href:"https://tsoa-community.github.io/reference/interfaces/_tsoa_runtime.config-1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"typescript-unions-are-now-implemented-as-anyof-in-openapi-671"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript-unions-are-now-implemented-as-anyof-in-openapi-671"}},[t._v("#")]),t._v(" TypeScript Unions are now implemented as "),a("code",[t._v("anyOf")]),t._v(" in OpenAPI "),a("a",{attrs:{href:"https://github.com/lukeautry/tsoa/issues/671",target:"_blank",rel:"noopener noreferrer"}},[t._v("#671"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);